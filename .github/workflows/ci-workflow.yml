name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  run:
    name: Run CI Checks

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 19
      - name: Install npm Dependencies
        run: |
          npm install -g markdownlint-cli@0.32.2
          npm install -g cspell@5.20.0
      - name: Run markdownlint
        if: success() || failure()
        run: markdownlint "**/*.md"
      - name: Run cspell
        if: success() || failure()
        run: cspell -c .cspell.json "**/*.py" "**/*.md" "**/*.rs"
      - name: Run cargo Format
        if: success() || failure()
        run: cargo fmt --all --check
      - name: Run Cargo Clippy
        if: success() || failure()
        run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Run CI Tests

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      
    steps:
      - uses: actions/checkout@v4
      - name: âš¡ Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Cargo dependencies
        run: |
          cargo install --locked cargo-tarpaulin || true
          cargo install --locked cargo-audit || true
          cargo install --locked cargo-pants || true
      - name: Run Cargo Audit
        if: success() || failure()
        run: cargo audit
      - name: Run Cargo Pants
        if: success() || failure()
        run: cargo install cargo-pants && cargo pants
      - name: Run cargo-tarpaulin
        run: cargo tarpaulin --out Xml --timeout 180
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cobertura.xml
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml